names_to_keep <- c("a", "c")
# You can take the subset of 'my_list' with names in 'names_to_keep' by
subset_list <- my_list[names(my_list) %in% names_to_keep]
View(subset_list)
rm(list=ls())
setwd("C:/Users/marcu/Documents/gas-col")
library(tidyverse)
library(lubridate)
library(lfe)
library(zoo)
library(stargazer)
library(nlme)
# Load data
analysis_data <- readRDS("01_data/02_processed/analysis_data.rds")
gas_stations <- readRDS("01_data/02_processed/cleaned_gas_stations.rds")
# Unique dates
unique_dates <- sort(unique(analysis_data$date))
brand_list <- gas_stations %>% filter(!is.na(brand)) %>% group_by(brand) %>%
summarise(n = n()) %>% arrange(-n) %>% filter(n > 25) %>% mutate(t_stat = NA,
p_val = NA)
for (b in brand_list$brand){
print(which(brand_list$brand == b))
print(b)
reg_data <- analysis_data %>% filter(brand == b)
model_brand <- felm(log_e5 ~ same_brand_as_nearest_station_phdis +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km| date | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_brand_coef <- summary(model_brand)$coef
brand_list$t_stat[which(brand_list$brand == b)] <- model_brand_coef[1,3]
brand_list$p_val[which(brand_list$brand == b)] <- model_brand_coef[1,4]
print(model_brand_coef)
}
strategic_ps_list <- brand_list %>% filter( t_stat > 1.96) %>% select(brand) %>% pull() %>% sort()
frac_ps = sum(brand_list %>% filter(brand %in% strategic_ps_list) %>% select(n) %>% pull)/nrow(gas_stations)
analysis_data$strategic_ps <- analysis_data$brand %in% strategic_ps_list
analysis_data$neighbor_strategic_ps <- analysis_data$brand_of_nearest_station_phdis %in% strategic_ps_list
collusion_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 1))
names(collusion_matrix) <- strategic_ps_list
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
collusion_matrix <- collusion_matrix %>% rbind( t_model_coef[names(t_model_coef) %in% strategic_ps_list, 1] )
}
rownames(collusion_matrix) <- strategic_ps_list
View(collusion_matrix)
t_model_coef[names(t_model_coef) %in% strategic_ps_list, 1]
t_model_coef[names(t_model_coef) %in% strategic_ps_list]
t_model_coef
t_model_coef[names(t_model_coef) == "aral"]
t_model_coef[1,names(t_model_coef) == "aral"]
t_model_coef[1, "aral"]
t_model_coef[1, strategic_ps_list]
collusion_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 1))
names(collusion_matrix) <- strategic_ps_list
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
collusion_matrix <- collusion_matrix %>% rbind( t_model_coef[1, strategic_ps_list] )
}
t_model_coef[1, strategic_ps_list]
t_model_coef[1, names(t_model_coef) %in% strategic_ps_list]
names(t_model_coef)
colnames(t_model_coef)
t_model_coef[1, colnames(t_model_coef) %in% strategic_ps_list]
collusion_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 1))
names(collusion_matrix) <- strategic_ps_list
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
collusion_matrix <- collusion_matrix %>% rbind( t_model_coef[1, colnames(t_model_coef) %in% strategic_ps_list])
}
rownames(collusion_matrix) <- strategic_ps_list
collusion_matrix <- collusion_matrix[2:,]
collusion_matrix <- collusion_matrix[2:nrow(collusion_matrix),]
rownames(collusion_matrix) <- strategic_ps_list
View(collusion_matrix)
collusion_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 1))
names(collusion_matrix) <- strategic_ps_list
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
collusion_matrix <- collusion_matrix %>% rbind( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list])
}
collusion_matrix <- collusion_matrix[2:nrow(collusion_matrix),]
rownames(collusion_matrix) <- strategic_ps_list
View(collusion_matrix)
View(brand_list)
b = "go"
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
typeof(t_model_coef)
View(t_model_coef)
collusion_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 1))
names(collusion_matrix) <- strategic_ps_list
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
collusion_matrix <- collusion_matrix %>% rbind( as.data.frame( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
}
t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]
as.list(t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list])
collusion_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 1))
names(collusion_matrix) <- strategic_ps_list
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
collusion_matrix <- collusion_matrix %>% rbind( as.list( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
}
collusion_matrix %>% rbind( as.list( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
collusion_matrix %>% rbind(  t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list])
collusion_matrix %>% rbind( as.list.data.frame( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
collusion_matrix %>% rbind( as.data.frame( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
collusion_matrix %>% rbind( as.numeric( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
collusion_matrix %>% rbind( as.list( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
library(plyr)
collusion_matrix %>% rbind.fill( as.list( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
collusion_matrix %>% rbind.fill( as.data.frame( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
?rbind.fill
setNames(vector("list", length(strategic_ps_list)), strategic_ps_list)
collusion_matrix %>% rbind(setNames(vector("list", length(strategic_ps_list)), strategic_ps_list))
setNames(t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list], strategic_ps_list)
setNames(t_model_coef[3, b)
t_model_coef[3, b]
t_model_coef[3, "a"]
collusion_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 1))
names(collusion_matrix) <- strategic_ps_list
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
for(b2 in strategic_ps_list){
collusion_matrix[b,b2] <- t_model_coef[3, b2]
}
#collusion_matrix <- collusion_matrix %>% rbind( as.list( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
}
View(collusion_matrix)
tryCatch(t_model_coef[3, b2], NA)
tryCatch({t_model_coef[3, b2]}, error = function(e) {return(NA)})
tryCatch({t_model_coef[3, "total"]}, error = function(e) {return(NA)})
collusion_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 1))
names(collusion_matrix) <- strategic_ps_list
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
for(b2 in strategic_ps_list){
collusion_matrix[b,b2] <- tryCatch({t_model_coef[3, b2]}, error = function(e) {return(NA)})
}
#collusion_matrix <- collusion_matrix %>% rbind( as.list( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
}
collusion_matrix <- collusion_matrix[2:nrow(collusion_matrix),]
rownames(collusion_matrix) <- strategic_ps_list
print(xtable(collusion_matrix), type = "latex", file = "03_outputs/tables/20231030_col_mat.tex",
include.rownames=FALSE)
print(xtable(collusion_matrix), type = "latex", file = "03_outputs/tables/20231030_col_mat.tex",
include.rownames=TRUE)
NA/3
collusion_t_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 0))
collusion_alpha_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 0))
names(collusion_t_matrix) <- strategic_ps_list
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
for(b2 in strategic_ps_list){
collusion_t_matrix[b,b2] <- tryCatch({t_model_coef[3, b2]}, error = function(e) {return(NA)})
collusion_alpha_matrix[b,b2] <- tryCatch({t_model_coef[3, b2]}, error = function(e) {return(NA)}) /t_model_coef[3, b]
}
#collusion_t_matrix <- collusion_t_matrix %>% rbind( as.list( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
}
View(collusion_t_matrix)
View(collusion_matrix)
collusion_t_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 0))
collusion_alpha_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 0))
names(collusion_t_matrix) <- strategic_ps_list
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
for(b2 in strategic_ps_list){
collusion_t_matrix[b,b2] <- tryCatch({t_model_coef[3, b2]}, error = function(e) {return(NA)})
collusion_alpha_matrix[b,b2] <- tryCatch({t_model_coef[1, b2]}, error = function(e) {return(NA)}) /t_model_coef[1, b]
}
#collusion_t_matrix <- collusion_t_matrix %>% rbind( as.list( t_model_coef[3, colnames(t_model_coef) %in% strategic_ps_list]))
}
collusion_t_matrix <- collusion_t_matrix[2:nrow(collusion_t_matrix),]
rownames(collusion_t_matrix) <- strategic_ps_list
rownames(collusion_alpha_matrix) <- strategic_ps_list
print(xtable(collusion_alpha_matrix), type = "latex", file = "03_outputs/tables/20231030_col_alpha_mat.tex",
include.rownames=TRUE)
collusion_t_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 0))
collusion_alpha_matrix <- data.frame(matrix(ncol = length(strategic_ps_list), nrow = 0))
names(collusion_t_matrix) <- strategic_ps_list
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
for(b2 in strategic_ps_list){
collusion_t_matrix[b,b2] <- tryCatch({t_model_coef[3, b2]}, error = function(e) {return(NA)})
collusion_alpha_matrix[b,b2] <- tryCatch({t_model_coef[1, b2]}, error = function(e) {return(NA)}) /t_model_coef[1, b]
}
}
collusion_t_matrix <- data.frame()
collusion_alpha_matrix <- data.frame()
for(b in strategic_ps_list){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
for(b2 in strategic_ps_list){
collusion_t_matrix[b,b2] <- tryCatch({t_model_coef[3, b2]}, error = function(e) {return(NA)})
collusion_alpha_matrix[b,b2] <- tryCatch({t_model_coef[1, b2]}, error = function(e) {return(NA)}) /t_model_coef[1, b]
}
}
rownames(collusion_t_matrix) <- strategic_ps_list
rownames(collusion_alpha_matrix) <- strategic_ps_list
print(xtable(collusion_t_matrix), type = "latex", file = "03_outputs/tables/20231030_col_t_mat.tex",
include.rownames=TRUE)
print(xtable(collusion_alpha_matrix), type = "latex", file = "03_outputs/tables/20231030_col_alpha_mat.tex",
include.rownames=TRUE)
model_1 <- felm(log_e5 ~ same_brand_as_nearest_station_phdis +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  brand + date  | 0 | brand + date,
data = analysis_data %>% filter(strategic_ps),
na.action = na.omit)
model_1 %>% summary()
model_2 <- felm(log_e5 ~ same_brand_as_nearest_station_phdis +
same_brand_as_2nd_nearest_station_phdis +
same_brand_as_3rd_nearest_station_phdis +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  brand + date  | 0 | brand + date,
data = analysis_data %>% filter(strategic_ps),
na.action = na.omit)
summary(model_2)
model_3 <- felm(log_e5 ~ same_brand_as_nearest_station_phdis +
I(same_brand_as_nearest_station_phdis*diff_phdis_2nd_1st) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  brand + date  | 0 | brand + date,
data = analysis_data %>% filter(strategic_ps),
na.action = na.omit)
# Combine the matrices into a new character matrix
combined_matrix <- matrix("", nrow = nrow(collusion_alpha_matrix), ncol = ncol(collusion_alpha_matrix),
dimnames = dimnames(collusion_alpha_matrix))
for (i in 1:nrow(collusion_alpha_matrix)) {
for (j in 1:ncol(collusion_alpha_matrix)) {
combined_matrix[i, j] <- paste(collusion_alpha_matrix[i, j], "\\par (", collusion_t_matrix[i, j], ")", sep = "")
}
}
print(xtable(combined_matrix), type = "latex", file = "03_outputs/tables/20231030_comb.tex",
include.rownames=TRUE)
print(xtable(combined_matrix), type = "latex", file = "03_outputs/tables/20231030_comb.tex",
include.rownames=TRUE,
sanitize.text.function = function(x) {x}, hline.after = NULL, comment = FALSE)
# Combine the matrices into a new character matrix
combined_matrix <- matrix("", nrow = nrow(collusion_alpha_matrix), ncol = ncol(collusion_alpha_matrix),
dimnames = dimnames(collusion_alpha_matrix))
for (i in 1:nrow(collusion_alpha_matrix)) {
for (j in 1:ncol(collusion_alpha_matrix)) {
combined_matrix[i, j] <- paste(round(collusion_alpha_matrix[i, j],digits = 3), "\\par (", round(collusion_t_matrix[i, j],digits = 3), ")", sep = "")
}
}
print(xtable(combined_matrix), type = "latex", file = "03_outputs/tables/20231030_comb.tex",
include.rownames=TRUE,
sanitize.text.function = function(x) {x}, hline.after = NULL, comment = FALSE)
summary(model_3)
model_4 <- felm(log_e5 ~ same_brand_as_nearest_station_phdis +
I(same_brand_as_nearest_station_phdis*diff_phdis_2nd_1st) +
same_brand_as_2nd_nearest_station_phdis +
same_brand_as_3rd_nearest_station_phdis +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  brand + date  | 0 | brand + date,
data = analysis_data %>% filter(strategic_ps),
na.action = na.omit)
sink("03_outputs/tables/20231030_reg_strat_ps.tex")
stargazer(model_1, model_2, model_3, model_4, type = "latex",
covariate.labels = c("Same Brand as Nearest", "Same Brand as Nearest X Diff_2nd_1st", "Same Brand as Second Nearest", "Same Brand as Third Nearest"),
omit = c("stations_within_5km", "stations_within_10km", "stations_within_15km", "population_within_10km", "stations_per_million_pop_10km"),
se = list(model_phdis_coef[,2],model_drdis_coef[,2],model_drdur_coef[,2], model_full_coef[,2]), # assuming second column contains SEs
omit.stat = "all", # to omit additional statistics like R-squared, F-statistic, etc.
single.row = FALSE,
title = "",
label = "")
stargazer(model_1, model_2, model_3, model_4, type = "latex",
covariate.labels = c("Same Brand as Nearest", "Same Brand as Nearest X Diff_2nd_1st", "Same Brand as Second Nearest", "Same Brand as Third Nearest"),
omit = c("stations_within_5km", "stations_within_10km", "stations_within_15km", "population_within_10km", "stations_per_million_pop_10km"),
se = list(model_1[,2],model_2[,2],model_3[,2], model_4[,2]), # assuming second column contains SEs
omit.stat = "all", # to omit additional statistics like R-squared, F-statistic, etc.
single.row = FALSE,
title = "",
label = "")
model_1[,2]
model_1_coef <- summary(model_1)$coef
sink("03_outputs/tables/20231030_reg_strat_ps.tex")
model_1_coef <- summary(model_1)$coef
model_2_coef <- summary(model_2)$coef
model_3_coef <- summary(model_3)$coef
model_4_coef <- summary(model_4)$coef
stargazer(model_1, model_2, model_3, model_4, type = "latex",
covariate.labels = c("Same Brand as Nearest", "Same Brand as Nearest X Diff_2nd_1st", "Same Brand as Second Nearest", "Same Brand as Third Nearest"),
omit = c("stations_within_5km", "stations_within_10km", "stations_within_15km", "population_within_10km", "stations_per_million_pop_10km"),
se = list(model_1_coef[,2],model_2_coef[,2],model_3_coef[,2], model_4_coef[,2]), # assuming second column contains SEs
omit.stat = "all", # to omit additional statistics like R-squared, F-statistic, etc.
single.row = FALSE,
title = "",
label = "")
sink()
stargazer(model_1, model_2, model_3, model_4, type = "latex",
covariate.labels = c("Same Brand as Nearest", "Same Brand as Second Nearest", "Same Brand as Third Nearest", "Same Brand as Nearest X Diff_2nd_1st"),
omit = c("stations_within_5km", "stations_within_10km", "stations_within_15km", "population_within_10km", "stations_per_million_pop_10km"),
se = list(model_1_coef[,2],model_2_coef[,2],model_3_coef[,2], model_4_coef[,2]), # assuming second column contains SEs
omit.stat = "all", # to omit additional statistics like R-squared, F-statistic, etc.
single.row = FALSE,
title = "",
label = "")
sink("03_outputs/tables/20231030_reg_strat_ps.tex")
model_1_coef <- summary(model_1)$coef
model_2_coef <- summary(model_2)$coef
model_3_coef <- summary(model_3)$coef
model_4_coef <- summary(model_4)$coef
stargazer(model_1, model_2, model_3, model_4, type = "latex",
covariate.labels = c("Same Brand as Nearest", "Same Brand as Second Nearest", "Same Brand as Third Nearest", "Same Brand as Nearest X Diff 2nd 1st"),
omit = c("stations_within_5km", "stations_within_10km", "stations_within_15km", "population_within_10km", "stations_per_million_pop_10km"),
se = list(model_1_coef[,2],model_2_coef[,2],model_3_coef[,2], model_4_coef[,2]), # assuming second column contains SEs
omit.stat = "all", # to omit additional statistics like R-squared, F-statistic, etc.
single.row = FALSE,
title = "",
label = "")
sink()
collusion_matrix_firms <- brand_list %>% filter(brand %in% strategic_ps_list & n > 500) %>% select(brand) %>% pull()
collusion_t_matrix <- data.frame()
collusion_alpha_matrix <- data.frame()
for(b in collusion_matrix_firms){
reg_data <- analysis_data %>% filter(brand == b)
reg_data$regressors <- ifelse(reg_data$neighbor_strategic_ps,
paste(reg_data$brand, reg_data$brand_of_nearest_station_phdis, sep = "_"),
"aaa_non_strategic_neighbor")
model <- felm(log_e5 ~ as.factor(regressors) +
stations_within_5km + stations_within_10km + stations_within_15km +
population_within_10km + stations_per_million_pop_10km|  date  | 0 | date + stid ,
data = reg_data,
na.action = na.omit)
model_coef <- summary(model)$coef
print(model_coef)
rownames(model_coef) <- sub(".*_", "", rownames(model_coef))
t_model_coef <- t(model_coef)
for(b2 in collusion_matrix_firms){
collusion_t_matrix[b,b2] <- tryCatch({t_model_coef[3, b2]}, error = function(e) {return(NA)})
collusion_alpha_matrix[b,b2] <- tryCatch({t_model_coef[1, b2]}, error = function(e) {return(NA)}) /t_model_coef[1, b]
}
}
rownames(collusion_t_matrix) <- collusion_matrix_firms
rownames(collusion_alpha_matrix) <- collusion_matrix_firms
print(xtable(collusion_t_matrix), type = "latex", file = "03_outputs/tables/20231030_col_t_mat.tex",
include.rownames=TRUE)
print(xtable(collusion_alpha_matrix), type = "latex", file = "03_outputs/tables/20231030_col_alpha_mat.tex",
include.rownames=TRUE)
rm(list=ls())
setwd("C:/Users/marcu/Documents/gas-col")
library(tidyverse)
library(lubridate)
library(lfe)
library(zoo)
library(stargazer)
library(nlme)
library(plyr)
# Load data
analysis_data <- readRDS("01_data/02_processed/analysis_data.rds")
gas_stations <- readRDS("01_data/02_processed/cleaned_gas_stations.rds")
# Unique dates
unique_dates <- sort(unique(analysis_data$date))
brand_list <- gas_stations %>% filter(!is.na(brand)) %>% group_by(brand) %>%
summarise(n = n()) %>% arrange(-n) %>% filter(n > 25) %>% mutate(t_stat = NA,
p_val = NA)
brand_list <- gas_stations %>% filter(!is.na(brand)) %>% group_by(brand) %>%
summarise(n = n()) %>% arrange(-n) %>% filter(n > 25) %>% mutate(t_stat = NA,
p_val = NA)
